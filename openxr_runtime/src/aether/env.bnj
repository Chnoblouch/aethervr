use std.{config, path.Path};

meta if config.OS == config.WINDOWS {
    const GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT: u32 = 0x00000002;
    const GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS: u32 = 0x00000004;

    native func GetModuleHandleExA(dwFlags: u32, lpModuleName: *u8, phModule: *addr) -> u32;
    native func GetModuleFileNameA(hModule: addr, lpFilename: *u8, nSize: u32) -> u32;

    pub func get_shared_library_path() -> ?Path {
        var handle: addr;
        if GetModuleHandleExA(
            GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT | GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS,
            get_shared_library_path as *u8,
            &handle
        ) == 0 {
            return none;
        }

        var path_str: [u8; 255];
        if GetModuleFileNameA(handle, &path_str as *u8, 255) == 0 {
            return none;
        }
        
        return Path.from(&path_str as *u8);
    }
} else {
    pub func get_shared_library_path() -> ?Path {
        return Path.from("./dummy");
    }
}